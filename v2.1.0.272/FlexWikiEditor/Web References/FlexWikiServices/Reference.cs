//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace FlexWikiEditor.FlexWikiServices {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EditServiceSoap", Namespace="http://www.flexwiki.com/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TopicName))]
    public partial class EditService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CanEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNamespacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultNamespaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTopicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHtmlForTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHtmlForTopicVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTextForTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTextForTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionsForTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreviewForTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreTopicOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EditService() {
            this.Url = "http://localhost/flexwiki/editservice.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CanEditCompletedEventHandler CanEditCompleted;
        
        /// <remarks/>
        public event GetAllNamespacesCompletedEventHandler GetAllNamespacesCompleted;
        
        /// <remarks/>
        public event GetDefaultNamespaceCompletedEventHandler GetDefaultNamespaceCompleted;
        
        /// <remarks/>
        public event GetAllTopicsCompletedEventHandler GetAllTopicsCompleted;
        
        /// <remarks/>
        public event GetHtmlForTopicCompletedEventHandler GetHtmlForTopicCompleted;
        
        /// <remarks/>
        public event GetHtmlForTopicVersionCompletedEventHandler GetHtmlForTopicVersionCompleted;
        
        /// <remarks/>
        public event GetTextForTopicCompletedEventHandler GetTextForTopicCompleted;
        
        /// <remarks/>
        public event SetTextForTopicCompletedEventHandler SetTextForTopicCompleted;
        
        /// <remarks/>
        public event GetVersionsForTopicCompletedEventHandler GetVersionsForTopicCompleted;
        
        /// <remarks/>
        public event GetPreviewForTopicCompletedEventHandler GetPreviewForTopicCompleted;
        
        /// <remarks/>
        public event RestoreTopicCompletedEventHandler RestoreTopicCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/CanEdit", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CanEdit() {
            object[] results = this.Invoke("CanEdit", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCanEdit(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CanEdit", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCanEdit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CanEditAsync() {
            this.CanEditAsync(null);
        }
        
        /// <remarks/>
        public void CanEditAsync(object userState) {
            if ((this.CanEditOperationCompleted == null)) {
                this.CanEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanEditOperationCompleted);
            }
            this.InvokeAsync("CanEdit", new object[0], this.CanEditOperationCompleted, userState);
        }
        
        private void OnCanEditOperationCompleted(object arg) {
            if ((this.CanEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanEditCompleted(this, new CanEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetAllNamespaces", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentBase[] GetAllNamespaces() {
            object[] results = this.Invoke("GetAllNamespaces", new object[0]);
            return ((ContentBase[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllNamespaces(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllNamespaces", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ContentBase[] EndGetAllNamespaces(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ContentBase[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNamespacesAsync() {
            this.GetAllNamespacesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllNamespacesAsync(object userState) {
            if ((this.GetAllNamespacesOperationCompleted == null)) {
                this.GetAllNamespacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNamespacesOperationCompleted);
            }
            this.InvokeAsync("GetAllNamespaces", new object[0], this.GetAllNamespacesOperationCompleted, userState);
        }
        
        private void OnGetAllNamespacesOperationCompleted(object arg) {
            if ((this.GetAllNamespacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNamespacesCompleted(this, new GetAllNamespacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetDefaultNamespace", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentBase GetDefaultNamespace() {
            object[] results = this.Invoke("GetDefaultNamespace", new object[0]);
            return ((ContentBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultNamespace(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultNamespace", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ContentBase EndGetDefaultNamespace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ContentBase)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultNamespaceAsync() {
            this.GetDefaultNamespaceAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultNamespaceAsync(object userState) {
            if ((this.GetDefaultNamespaceOperationCompleted == null)) {
                this.GetDefaultNamespaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultNamespaceOperationCompleted);
            }
            this.InvokeAsync("GetDefaultNamespace", new object[0], this.GetDefaultNamespaceOperationCompleted, userState);
        }
        
        private void OnGetDefaultNamespaceOperationCompleted(object arg) {
            if ((this.GetDefaultNamespaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultNamespaceCompleted(this, new GetDefaultNamespaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetAllTopics", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AbsoluteTopicName[] GetAllTopics(ContentBase cb) {
            object[] results = this.Invoke("GetAllTopics", new object[] {
                        cb});
            return ((AbsoluteTopicName[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllTopics(ContentBase cb, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllTopics", new object[] {
                        cb}, callback, asyncState);
        }
        
        /// <remarks/>
        public AbsoluteTopicName[] EndGetAllTopics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AbsoluteTopicName[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTopicsAsync(ContentBase cb) {
            this.GetAllTopicsAsync(cb, null);
        }
        
        /// <remarks/>
        public void GetAllTopicsAsync(ContentBase cb, object userState) {
            if ((this.GetAllTopicsOperationCompleted == null)) {
                this.GetAllTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTopicsOperationCompleted);
            }
            this.InvokeAsync("GetAllTopics", new object[] {
                        cb}, this.GetAllTopicsOperationCompleted, userState);
        }
        
        private void OnGetAllTopicsOperationCompleted(object arg) {
            if ((this.GetAllTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTopicsCompleted(this, new GetAllTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetHtmlForTopic", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHtmlForTopic(AbsoluteTopicName topicName) {
            object[] results = this.Invoke("GetHtmlForTopic", new object[] {
                        topicName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHtmlForTopic(AbsoluteTopicName topicName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHtmlForTopic", new object[] {
                        topicName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetHtmlForTopic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHtmlForTopicAsync(AbsoluteTopicName topicName) {
            this.GetHtmlForTopicAsync(topicName, null);
        }
        
        /// <remarks/>
        public void GetHtmlForTopicAsync(AbsoluteTopicName topicName, object userState) {
            if ((this.GetHtmlForTopicOperationCompleted == null)) {
                this.GetHtmlForTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHtmlForTopicOperationCompleted);
            }
            this.InvokeAsync("GetHtmlForTopic", new object[] {
                        topicName}, this.GetHtmlForTopicOperationCompleted, userState);
        }
        
        private void OnGetHtmlForTopicOperationCompleted(object arg) {
            if ((this.GetHtmlForTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHtmlForTopicCompleted(this, new GetHtmlForTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetHtmlForTopicVersion", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHtmlForTopicVersion(AbsoluteTopicName topicName, string version) {
            object[] results = this.Invoke("GetHtmlForTopicVersion", new object[] {
                        topicName,
                        version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHtmlForTopicVersion(AbsoluteTopicName topicName, string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHtmlForTopicVersion", new object[] {
                        topicName,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetHtmlForTopicVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHtmlForTopicVersionAsync(AbsoluteTopicName topicName, string version) {
            this.GetHtmlForTopicVersionAsync(topicName, version, null);
        }
        
        /// <remarks/>
        public void GetHtmlForTopicVersionAsync(AbsoluteTopicName topicName, string version, object userState) {
            if ((this.GetHtmlForTopicVersionOperationCompleted == null)) {
                this.GetHtmlForTopicVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHtmlForTopicVersionOperationCompleted);
            }
            this.InvokeAsync("GetHtmlForTopicVersion", new object[] {
                        topicName,
                        version}, this.GetHtmlForTopicVersionOperationCompleted, userState);
        }
        
        private void OnGetHtmlForTopicVersionOperationCompleted(object arg) {
            if ((this.GetHtmlForTopicVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHtmlForTopicVersionCompleted(this, new GetHtmlForTopicVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetTextForTopic", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTextForTopic(AbsoluteTopicName topicName) {
            object[] results = this.Invoke("GetTextForTopic", new object[] {
                        topicName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTextForTopic(AbsoluteTopicName topicName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTextForTopic", new object[] {
                        topicName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetTextForTopic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTextForTopicAsync(AbsoluteTopicName topicName) {
            this.GetTextForTopicAsync(topicName, null);
        }
        
        /// <remarks/>
        public void GetTextForTopicAsync(AbsoluteTopicName topicName, object userState) {
            if ((this.GetTextForTopicOperationCompleted == null)) {
                this.GetTextForTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTextForTopicOperationCompleted);
            }
            this.InvokeAsync("GetTextForTopic", new object[] {
                        topicName}, this.GetTextForTopicOperationCompleted, userState);
        }
        
        private void OnGetTextForTopicOperationCompleted(object arg) {
            if ((this.GetTextForTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTextForTopicCompleted(this, new GetTextForTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/SetTextForTopic", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTextForTopic(AbsoluteTopicName topicName, string postedTopicText, string visitorIdentityString) {
            this.Invoke("SetTextForTopic", new object[] {
                        topicName,
                        postedTopicText,
                        visitorIdentityString});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetTextForTopic(AbsoluteTopicName topicName, string postedTopicText, string visitorIdentityString, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetTextForTopic", new object[] {
                        topicName,
                        postedTopicText,
                        visitorIdentityString}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetTextForTopic(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetTextForTopicAsync(AbsoluteTopicName topicName, string postedTopicText, string visitorIdentityString) {
            this.SetTextForTopicAsync(topicName, postedTopicText, visitorIdentityString, null);
        }
        
        /// <remarks/>
        public void SetTextForTopicAsync(AbsoluteTopicName topicName, string postedTopicText, string visitorIdentityString, object userState) {
            if ((this.SetTextForTopicOperationCompleted == null)) {
                this.SetTextForTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTextForTopicOperationCompleted);
            }
            this.InvokeAsync("SetTextForTopic", new object[] {
                        topicName,
                        postedTopicText,
                        visitorIdentityString}, this.SetTextForTopicOperationCompleted, userState);
        }
        
        private void OnSetTextForTopicOperationCompleted(object arg) {
            if ((this.SetTextForTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTextForTopicCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetVersionsForTopic", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetVersionsForTopic(AbsoluteTopicName topicName) {
            object[] results = this.Invoke("GetVersionsForTopic", new object[] {
                        topicName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVersionsForTopic(AbsoluteTopicName topicName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVersionsForTopic", new object[] {
                        topicName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetVersionsForTopic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionsForTopicAsync(AbsoluteTopicName topicName) {
            this.GetVersionsForTopicAsync(topicName, null);
        }
        
        /// <remarks/>
        public void GetVersionsForTopicAsync(AbsoluteTopicName topicName, object userState) {
            if ((this.GetVersionsForTopicOperationCompleted == null)) {
                this.GetVersionsForTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionsForTopicOperationCompleted);
            }
            this.InvokeAsync("GetVersionsForTopic", new object[] {
                        topicName}, this.GetVersionsForTopicOperationCompleted, userState);
        }
        
        private void OnGetVersionsForTopicOperationCompleted(object arg) {
            if ((this.GetVersionsForTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionsForTopicCompleted(this, new GetVersionsForTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/GetPreviewForTopic", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPreviewForTopic(AbsoluteTopicName topicName, string textToFormat) {
            object[] results = this.Invoke("GetPreviewForTopic", new object[] {
                        topicName,
                        textToFormat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPreviewForTopic(AbsoluteTopicName topicName, string textToFormat, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPreviewForTopic", new object[] {
                        topicName,
                        textToFormat}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPreviewForTopic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreviewForTopicAsync(AbsoluteTopicName topicName, string textToFormat) {
            this.GetPreviewForTopicAsync(topicName, textToFormat, null);
        }
        
        /// <remarks/>
        public void GetPreviewForTopicAsync(AbsoluteTopicName topicName, string textToFormat, object userState) {
            if ((this.GetPreviewForTopicOperationCompleted == null)) {
                this.GetPreviewForTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreviewForTopicOperationCompleted);
            }
            this.InvokeAsync("GetPreviewForTopic", new object[] {
                        topicName,
                        textToFormat}, this.GetPreviewForTopicOperationCompleted, userState);
        }
        
        private void OnGetPreviewForTopicOperationCompleted(object arg) {
            if ((this.GetPreviewForTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreviewForTopicCompleted(this, new GetPreviewForTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.flexwiki.com/webservices/RestoreTopic", RequestNamespace="http://www.flexwiki.com/webservices/", ResponseNamespace="http://www.flexwiki.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RestoreTopic(AbsoluteTopicName topicName, string visitorIdentityString, string version) {
            this.Invoke("RestoreTopic", new object[] {
                        topicName,
                        visitorIdentityString,
                        version});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRestoreTopic(AbsoluteTopicName topicName, string visitorIdentityString, string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RestoreTopic", new object[] {
                        topicName,
                        visitorIdentityString,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRestoreTopic(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void RestoreTopicAsync(AbsoluteTopicName topicName, string visitorIdentityString, string version) {
            this.RestoreTopicAsync(topicName, visitorIdentityString, version, null);
        }
        
        /// <remarks/>
        public void RestoreTopicAsync(AbsoluteTopicName topicName, string visitorIdentityString, string version, object userState) {
            if ((this.RestoreTopicOperationCompleted == null)) {
                this.RestoreTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreTopicOperationCompleted);
            }
            this.InvokeAsync("RestoreTopic", new object[] {
                        topicName,
                        visitorIdentityString,
                        version}, this.RestoreTopicOperationCompleted, userState);
        }
        
        private void OnRestoreTopicOperationCompleted(object arg) {
            if ((this.RestoreTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreTopicCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.flexwiki.com/webservices/")]
    public partial class ContentBase {
        
        private System.DateTime createdField;
        
        private System.DateTime lastReadField;
        
        private string descriptionField;
        
        private string contactField;
        
        private string imageURLField;
        
        private string homePageField;
        
        private string namespaceField;
        
        private string titleField;
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastRead {
            get {
                return this.lastReadField;
            }
            set {
                this.lastReadField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string ImageURL {
            get {
                return this.imageURLField;
            }
            set {
                this.imageURLField = value;
            }
        }
        
        /// <remarks/>
        public string HomePage {
            get {
                return this.homePageField;
            }
            set {
                this.homePageField = value;
            }
        }
        
        /// <remarks/>
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbsoluteTopicName))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.flexwiki.com/webservices/")]
    public abstract partial class TopicName {
        
        private string fullnameWithVersionField;
        
        private string versionField;
        
        private string fullnameField;
        
        private string nameField;
        
        private string namespaceField;
        
        /// <remarks/>
        public string FullnameWithVersion {
            get {
                return this.fullnameWithVersionField;
            }
            set {
                this.fullnameWithVersionField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Fullname {
            get {
                return this.fullnameField;
            }
            set {
                this.fullnameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.flexwiki.com/webservices/")]
    public partial class AbsoluteTopicName : TopicName {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CanEditCompletedEventHandler(object sender, CanEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAllNamespacesCompletedEventHandler(object sender, GetAllNamespacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNamespacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNamespacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentBase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentBase[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetDefaultNamespaceCompletedEventHandler(object sender, GetDefaultNamespaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultNamespaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultNamespaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAllTopicsCompletedEventHandler(object sender, GetAllTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AbsoluteTopicName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AbsoluteTopicName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetHtmlForTopicCompletedEventHandler(object sender, GetHtmlForTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHtmlForTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHtmlForTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetHtmlForTopicVersionCompletedEventHandler(object sender, GetHtmlForTopicVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHtmlForTopicVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHtmlForTopicVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetTextForTopicCompletedEventHandler(object sender, GetTextForTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTextForTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTextForTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SetTextForTopicCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVersionsForTopicCompletedEventHandler(object sender, GetVersionsForTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionsForTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionsForTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPreviewForTopicCompletedEventHandler(object sender, GetPreviewForTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreviewForTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreviewForTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void RestoreTopicCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591