<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
	<section name="flexWiki" type="FlexWiki.FlexWikiConfigurationSectionHandler, FlexWiki" />
  </configSections>
  <flexWiki>
	<plugins>
		<!-- Add <plugin> elements that identify plugins that implement WikiTalk types -->
		<!-- <plugin>AssemblyNameGoesHere</plugin> -->
		<!-- <plugin>CalendarProvider</plugin> -->
	</plugins>      
  </flexWiki> 
  <appSettings>
    <!-- PUT THE FULL PATH TO THE NAMESPACE MAP FILE HERE -->
    <add key="FederationNamespaceMapFile" value="~/WikiBases/NamespaceMap.xml" />
    
    <!-- Set this key to identify an SMTP mail server than can deliver mail for FlexWiki -->
    <!-- <add key="SMTPServer" value="smtphost" /> -->
    
    <!-- The next two keys are needed for wiki newsletters if your SMTP server requires authentication 
	 If your SMTP server does not require authentication, comment them out. -->
    <!--
    <add key="SMTPUser" value="davidorn@flexwiki.com" />
    <add key="SMTPPassword" value="password" />
    -->

    <add key="NewslettersFrom" value="wikinewsletters@flexwiki.com" />
    
    <add key="DisableNewsletters" value="true" />
    
	<!-- Set this key value to the comma-separated list of namespaces that should
	be imported into a namespaces newly created through the administration UI -->
	<!-- <add key="DefaultImportedNamespaces" value="Projects.Dog, Projects.Cat" /> -->

	<!-- Set this key to a valid email address to enable visitors to 
	request a namespace.  If this key is     set, users will be able 
	to fill in a form requesting a namespace and the request 
	will be sent by email to this address. -->
	<!-- <add key="SendNamespaceCreationRequestsTo" value="admin@yoursite.com" /> -->
	  
    <!-- Security - Used for Forms and Namespace Security
	 Specify the type of security to use.  Currently the only option is webconfig which indicates to
	 FlexWiki that the user crudentials are kept in the webconfig.
	 -->
    <add key="Security" value="webconfig" />
    <!-- DataProviders for the Security -->
    <!-- User DataProvider -->
    <add key="UserDataProvider" value="FlexWikiSecurity" />
    <add key="UserDataProviderClass" value="FlexWikiSecurity.SimpleUserDataProvider" />
    <add key="UserDataProviderConnection" value="UserData.config" />
    <!-- Permissions DataProvider -->
    <add key="PermissionsDataProvider" value="FlexWikiSecurity" />
    <add key="PermissionsDataProviderClass" value="FlexWikiSecurity.SimplePermissionsDataProvider" />
    <add key="PermissionsDataProviderConnection" value="PermissionsData.config" />
    <!-- Role DataProvider -->
    <add key="RoleDataProvider" value="FlexWikiSecurity" />
    <add key="RoleDataProviderClass" value="FlexWikiSecurity.SimpleRoleDataProvider" />
    <add key="RoleDataProviderConnection" value="RoleData.config" />
    
    <!-- Setting this to true will cause the newsletters to be sent as HTML attachments, 
	 rather than as HTML email. -->
    <add key="SendNewslettersAsAttachments" value="false" />
    
   
    <!-- To use the override style sheet uncomment this line
	 <add key="OverrideStylesheet" value="~/override.css" />
	 -->
    <!-- To show spaces in wiki links by default change this value to "True" -->
    <add key="DisplaySpacesInWikiLinks" value="False" />
    
    <!-- Include the LogPath key to identify a file to record log
	 entries. Path can be absolute. Relative paths are relative to
	 this directory. Note that if you use a relative path to write
	 to the web directory, the file may be able to be downloaded
	 by remote users, allowing them to read the contents of the
	 log file. Using an absolute path is recommended for
	 heightened security.
	 -->
    <!--
    <add key="LogPath" value="flex.csv" />
	 -->
    
  </appSettings>
  <system.web>
  
   <!--  DYNAMIC DEBUG COMPILATION
	 Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
	 false will improve runtime performance of this application. 
	 Set compilation debug="true" to insert debugging symbols (.pdb information)
	 into the compiled page. Because this creates a larger file that executes
	 more slowly, you should set this value to true only when debugging and to
	 false at all other times. For more information, refer to the documentation about
	 debugging ASP.NET files. -->
    <compilation defaultLanguage="c#" debug="true" />
    
    <!--  AUTHENTICATION 
	 This section sets the authentication policies of the application. Possible modes are "Windows", 
	 "Forms", "Passport" and "None"

	 "None" No authentication is performed. 
	 "Windows" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
	 its settings for the application. Anonymous access must be disabled in IIS. 
	 "Forms" You provide a custom form (Web page) for users to enter their credentials, and then 
	 you authenticate them in your application. A user credential token is stored in a cookie.
	 "Passport" Authentication is performed via a centralized authentication service provided
	 by Microsoft that offers a single logon and core profile services for member sites. -->
    <authentication mode="Windows" />
    <!--  AUTHORIZATION 
	 This section sets the authorization policies of the application. You can allow or deny access
	 to application resources by user or role. Wildcards: "*" mean everyone, "?" means anonymous 
	 (unauthenticated) users. -->
    <authorization>
      <allow users="*" /> <!-- Allow all users -->
      <!--  <allow     users="[comma separated list of users]"
		   roles="[comma separated list of roles]"/>
	   <deny      users="[comma separated list of users]"
		 roles="[comma separated list of roles]"/>
	   -->
    </authorization>
    
    <!-- We rely on session state, so we need to make sure it's turned on -->
    <!-- 
	      If you are running .NET framework 1.0, you must remove the validateRequest 
	      attribute below.  validateRequest must be false for 1.1, but 1.0 will 
	      choke on this, so it can't always be present
	 -->
    <sessionState mode="InProc" />
    <pages buffer="true" enableSessionState="true" 
        validateRequest="false" />
    
    <!--  CUSTOM ERROR MESSAGES
	 Set customErrors mode="On" or "RemoteOnly" to enable custom error messages, "Off" to disable. 
	 Add <error> tags for each of the errors you want to handle.

      "On" Always display custom (friendly) messages.
      "Off" Always display detailed ASP.NET error information.
      "RemoteOnly" Display custom (friendly) messages only to users not running 
      on the local Web server. This setting is recommended for security purposes, so 
      that you do not display application detail information to remote clients.-->
    <customErrors mode="RemoteOnly" />
  </system.web>
</configuration>
