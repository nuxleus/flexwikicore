#region License Statement
// Copyright (c) Microsoft Corporation.  All rights reserved.
//
// The use and distribution terms for this software are covered by the 
// Common Public License 1.0 (http://opensource.org/licenses/cpl.php)
// which can be found in the file CPL.TXT at the root of this distribution.
// By using this software in any fashion, you are agreeing to be bound by 
// the terms of this license.
//
// You must not remove this notice, or any other, from this software.
#endregion

using System;
using System.Text;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Web;
using System.Web.SessionState;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;

using FlexWiki.Web;
using System.IO;
using System.Collections.Generic;
using System.Xml;

namespace FlexWiki.Web.Admin
{
    public class EditConfiguration : AdminPage
    {

        private bool IsSaving
        {
            get
            {
                if (Request.HttpMethod.Equals("POST"))
                {
                    if ("save".Equals(Request.QueryString["action"]))
                    {
                        return true; 
                    }
                }

                return false; 
            }
        }

        protected override void ShowMain()
        {
            if (IsSaving)
            {
                List<string> errors = ValidateContent();
                if (errors.Count > 0)
                {
                    UIResponse.WritePara("There were problems with the configuration file:");

                    UIResponse.WriteStartUnorderedList();
                    errors.ForEach(delegate(string error)
                    {
                        UIResponse.WriteListItem(UIResponse.Escape(error));
                    });
                    UIResponse.WriteEndUnorderedList();
                }
                else
                {
                    SaveContents(); 
                    UIResponse.WritePara("<b>Configuration file saved.</b> To put the new settings into effect, use the 'Reread Configuration' menu item to the left.");
                }
            }

            UIResponse.WritePara(@"Caution: editing this file incorrectly can render the wiki insecure or 
inoperable. Do not edit this file unless you know what you are doing. When possible, 
use the other options in the administrative pages to modify wiki settings.");
            UIResponse.WritePara(""); 
            UIResponse.Write("<form action='?action=save' method='post'>");
            UIResponse.Write("<input type='submit' value='Save' />");
            UIResponse.Write("<br />");
            UIResponse.Write("<textarea name='contents' rows='20' columns='50' style='width:100%;height=100%'>");
            UIResponse.Write(Contents()); 
            UIResponse.Write("</textarea>"); 
            UIResponse.Write("</form>"); 
        }
        protected override void ShowMenu()
        {
            UIResponse.WriteStartMenu("Manage Configuration");
            UIResponse.WriteMenuItem("Config.aspx", "Validate Configuration", "Validate that the configuration is correct.");
            UIResponse.WriteMenuItem("EditConfiguration.aspx", "Edit Configuration", "Edit the flexwiki.config file directly.");
            UIResponse.WriteMenuItem("ReloadConfiguration.aspx", "Reread Configuration", "Reread the FlexWiki configuration file from disk.");
            UIResponse.WriteMenuItem("ResetConfiguration.aspx", "Reset Configuration", "Reset the flexwiki.config file to its default.");
            UIResponse.WriteEndMenu();
            UIResponse.WritePara("&nbsp;");

            base.ShowMenu();
        }

        private void Page_Load(object sender, System.EventArgs e)
        {
            // Put user code to initialize the page here
        }

        private string Contents()
        {
            if (IsSaving)
            {
                return Request.Form["contents"];
            }
            else
            {
                using (StreamReader reader = File.OpenText(FlexWikiWebApplication.ApplicationConfigurationPath))
                {
                    return reader.ReadToEnd();
                }
            }
        }
        private void SaveContents()
        {
            using (StreamWriter writer = new StreamWriter(File.Open(FlexWikiWebApplication.ApplicationConfigurationPath, FileMode.Create)))
            {
                writer.Write(Contents());
                writer.Flush();
                writer.Close(); 
            }
        }
        private List<string> ValidateContent()
        {
            List<string> errors = new List<string>();

            string contents = Contents();

            if (string.IsNullOrEmpty(contents))
            {
                errors.Add("The configuration file is empty.");
            }
            else
            {
                XmlDocument document = new XmlDocument();

                try
                {
                    document.LoadXml(contents);
                }
                catch (XmlException x)
                {
                    errors.Add(x.Message);
                }
                catch (Exception x)
                {
                    errors.Add(x.ToString());
                }

            }

            return errors;
        }

        #region Web Form Designer generated code
        override protected void OnInit(EventArgs e)
        {
            //
            // CODEGEN: This call is required by the ASP.NET Web Form Designer.
            //
            InitializeComponent();
            base.OnInit(e);
        }
        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.Load += new System.EventHandler(this.Page_Load);
        }
        #endregion
    }
}
